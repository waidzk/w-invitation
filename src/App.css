@import url('https://fonts.cdnfonts.com/css/javassoul');

body {
  font-family: 'Sans Serif';
}

.javassoul {
  font-family: 'Javassoul', sans-serif;
}


/* loading */
.wheel-and-hamster {
  --dur: 1s;
  position: relative;
  width: 12em;
  height: 12em;
  font-size: 14px;
}

.wheel,
.hamster,
.hamster div,
.spoke {
  position: absolute;
}

.wheel,
.spoke {
  border-radius: 50%;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.wheel {
  background: radial-gradient(100% 100% at center, hsla(0, 0%, 60%, 0) 47.8%, hsl(0, 0%, 60%) 48%);
  z-index: 2;
}

.hamster {
  animation: hamster var(--dur) ease-in-out infinite;
  top: 50%;
  left: calc(50% - 3.5em);
  width: 7em;
  height: 3.75em;
  transform: rotate(4deg) translate(-0.8em, 1.85em);
  transform-origin: 50% 0;
  z-index: 1;
}

.hamster__head {
  animation: hamsterHead var(--dur) ease-in-out infinite;
  background: hsl(30, 90%, 55%);
  border-radius: 70% 30% 0 100% / 40% 25% 25% 60%;
  box-shadow: 0 -0.25em 0 hsl(30, 90%, 80%) inset,
    0.75em -1.55em 0 hsl(30, 90%, 90%) inset;
  top: 0;
  left: -2em;
  width: 2.75em;
  height: 2.5em;
  transform-origin: 100% 50%;
}

.hamster__ear {
  animation: hamsterEar var(--dur) ease-in-out infinite;
  background: hsl(0, 90%, 85%);
  border-radius: 50%;
  box-shadow: -0.25em 0 hsl(30, 90%, 55%) inset;
  top: -0.25em;
  right: -0.25em;
  width: 0.75em;
  height: 0.75em;
  transform-origin: 50% 75%;
}

.hamster__eye {
  animation: hamsterEye var(--dur) linear infinite;
  background-color: hsl(0, 0%, 0%);
  border-radius: 50%;
  top: 0.375em;
  left: 1.25em;
  width: 0.5em;
  height: 0.5em;
}

.hamster__nose {
  background: hsl(0, 90%, 75%);
  border-radius: 35% 65% 85% 15% / 70% 50% 50% 30%;
  top: 0.75em;
  left: 0;
  width: 0.2em;
  height: 0.25em;
}

.hamster__body {
  animation: hamsterBody var(--dur) ease-in-out infinite;
  background: hsl(30, 90%, 90%);
  border-radius: 50% 30% 50% 30% / 15% 60% 40% 40%;
  box-shadow: 0.1em 0.75em 0 hsl(30, 90%, 55%) inset,
    0.15em -0.5em 0 hsl(30, 90%, 80%) inset;
  top: 0.25em;
  left: 2em;
  width: 4.5em;
  height: 3em;
  transform-origin: 17% 50%;
  transform-style: preserve-3d;
}

.hamster__limb--fr,
.hamster__limb--fl {
  clip-path: polygon(0 0, 100% 0, 70% 80%, 60% 100%, 0% 100%, 40% 80%);
  top: 2em;
  left: 0.5em;
  width: 1em;
  height: 1.5em;
  transform-origin: 50% 0;
}

.hamster__limb--fr {
  animation: hamsterFRLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30, 90%, 80%) 80%, hsl(0, 90%, 75%) 80%);
  transform: rotate(15deg) translateZ(-1px);
}

.hamster__limb--fl {
  animation: hamsterFLLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30, 90%, 90%) 80%, hsl(0, 90%, 85%) 80%);
  transform: rotate(15deg);
}

.hamster__limb--br,
.hamster__limb--bl {
  border-radius: 0.75em 0.75em 0 0;
  clip-path: polygon(0 0, 100% 0, 100% 30%, 70% 90%, 70% 100%, 30% 100%, 40% 90%, 0% 30%);
  top: 1em;
  left: 2.8em;
  width: 1.5em;
  height: 2.5em;
  transform-origin: 50% 30%;
}

.hamster__limb--br {
  animation: hamsterBRLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30, 90%, 80%) 90%, hsl(0, 90%, 75%) 90%);
  transform: rotate(-25deg) translateZ(-1px);
}

.hamster__limb--bl {
  animation: hamsterBLLimb var(--dur) linear infinite;
  background: linear-gradient(hsl(30, 90%, 90%) 90%, hsl(0, 90%, 85%) 90%);
  transform: rotate(-25deg);
}

.hamster__tail {
  animation: hamsterTail var(--dur) linear infinite;
  background: hsl(0, 90%, 85%);
  border-radius: 0.25em 50% 50% 0.25em;
  box-shadow: 0 -0.2em 0 hsl(0, 90%, 75%) inset;
  top: 1.5em;
  right: -0.5em;
  width: 1em;
  height: 0.5em;
  transform: rotate(30deg) translateZ(-1px);
  transform-origin: 0.25em 0.25em;
}

.spoke {
  animation: spoke var(--dur) linear infinite;
  background: radial-gradient(100% 100% at center, hsl(0, 0%, 60%) 4.8%, hsla(0, 0%, 60%, 0) 5%),
    linear-gradient(hsla(0, 0%, 55%, 0) 46.9%, hsl(0, 0%, 65%) 47% 52.9%, hsla(0, 0%, 65%, 0) 53%) 50% 50% / 99% 99% no-repeat;
}


/* butterfly animation */

@keyframes rightwingani {
  from {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  30% {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  50% {
    transform: rotate3d(0, 1, 0, 100deg);
  }

  70% {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  to {
    transform: rotate3d(0, 1, 0, 180deg);
  }
}

@keyframes leftwingani {
  from {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  30% {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  50% {
    transform: rotate3d(0, 1, 0, 80deg);
  }

  70% {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  to {
    transform: rotate3d(0, 1, 0, 0deg);
  }
}

@keyframes rightwingani2 {
  from {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  20% {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  60% {
    transform: rotate3d(0, 1, 0, 100deg);
  }

  90% {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  to {
    transform: rotate3d(0, 1, 0, 180deg);
  }
}

@keyframes leftwingani2 {
  from {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  20% {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  60% {
    transform: rotate3d(0, 1, 0, 80deg);
  }

  90% {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  to {
    transform: rotate3d(0, 1, 0, 0deg);
  }
}

@keyframes rightwingani3 {
  from {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  50% {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  70% {
    transform: rotate3d(0, 1, 0, 100deg);
  }

  90% {
    transform: rotate3d(0, 1, 0, 180deg);
  }

  to {
    transform: rotate3d(0, 1, 0, 180deg);
  }
}

@keyframes leftwingani3 {
  from {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  50% {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  70% {
    transform: rotate3d(0, 1, 0, 80deg);
  }

  90% {
    transform: rotate3d(0, 1, 0, 0deg);
  }

  to {
    transform: rotate3d(0, 1, 0, 0deg);
  }
}

.butterfly-large.butterfly-left {
  /* Wings */
  /* Right wing */
  /* Left wing */
  transform: rotate(20deg) scale(0.6, 0.6);
  transform-origin: center center;
}

.butterfly-large.butterfly-right {
  width: 140px;
  height: 87px;
  /* Wings */
  /* Right wing */
  /* Left wing */
  transform: rotate(-20deg) scale(0.6, 0.6);
  transform-origin: center center;
}

.butterfly-small.butterfly-left {
  /* Wings */
  /* Right wing */
  /* Left wing */
  transform: rotate(20deg) scale(0.4, 0.4);
  transform-origin: center center;
}

.butterfly-small.butterfly-right {
  width: 140px;
  height: 87px;
  /* Wings */
  /* Right wing */
  /* Left wing */
  transform: rotate(-20deg) scale(0.4, 0.4);
  transform-origin: center center;
}

.butterfly:before,
.butterfly:after {
  position: absolute;
  width: 75px;
  content: url("/images/butterfly-wing.png");
  animation-duration: 8s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}

.butterfly:before {
  transform: rotate3d(0, 0, 0, 180deg);
  /* Mirror left wing */
  transform-origin: center right;
}

.butterfly:after {
  transform-origin: top right;
}

.animation-1:before {
  animation-name: rightwingani;
}

.animation-1:after {
  animation-name: leftwingani;
}

.animation-2:before {
  animation-name: rightwingani2;
}

.animation-2:after {
  animation-name: leftwingani2;
}

.animation-3:before {
  animation-name: rightwingani3;
}

.animation-3:after {
  animation-name: leftwingani3;
}

.checkbox-wrapper-5 .check {
  --size: 40px;
  position: relative;
  background: linear-gradient(90deg, #82182a, #f099b5);
  line-height: 0;
  perspective: 400px;
  font-size: var(--size);
}

.checkbox-wrapper-5 .check input[type="checkbox"],
  .checkbox-wrapper-5 .check label,
  .checkbox-wrapper-5 .check label::before,
  .checkbox-wrapper-5 .check label::after,
  .checkbox-wrapper-5 .check {
  appearance: none;
  display: inline-block;
  border-radius: var(--size);
  border: 0;
  transition: .35s ease-in-out;
  box-sizing: border-box;
  cursor: pointer;
}

.checkbox-wrapper-5 .check label {
  width: calc(2.2 * var(--size));
  height: var(--size);
  background: #d7d7d7;
  overflow: hidden;
}

.checkbox-wrapper-5 .check input[type="checkbox"] {
  position: absolute;
  z-index: 1;
  width: calc(.8 * var(--size));
  height: calc(.8 * var(--size));
  top: calc(.1 * var(--size));
  left: calc(.1 * var(--size));
  background: linear-gradient(45deg, #dedede, #ffffff);
  box-shadow: 0 6px 7px rgba(0,0,0,0.3);
  outline: none;
  margin: 0;
}

.checkbox-wrapper-5 .check input[type="checkbox"]:checked {
  left: calc(1.3 * var(--size));
}

.checkbox-wrapper-5 .check input[type="checkbox"]:checked + label {
  background: transparent;
}

.checkbox-wrapper-5 .check label::before,
  .checkbox-wrapper-5 .check label::after {
  content: "· ·";
  position: absolute;
  overflow: hidden;
  left: calc(.15 * var(--size));
  top: calc(.5 * var(--size));
  height: var(--size);
  letter-spacing: calc(-0.04 * var(--size));
  color: #9b9b9b;
  font-family: "Times New Roman", serif;
  z-index: 2;
  font-size: calc(.6 * var(--size));
  border-radius: 0;
  transform-origin: 0 0 calc(-0.5 * var(--size));
  backface-visibility: hidden;
}

.checkbox-wrapper-5 .check label::after {
  content: "●";
  top: calc(.65 * var(--size));
  left: calc(.2 * var(--size));
  height: calc(.1 * var(--size));
  width: calc(.35 * var(--size));
  font-size: calc(.2 * var(--size));
  transform-origin: 0 0 calc(-0.4 * var(--size));
}

.checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::before,
  .checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::after {
  left: calc(1.55 * var(--size));
  top: calc(.4 * var(--size));
  line-height: calc(.1 * var(--size));
  transform: rotateY(360deg);
}

.checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::after {
  height: calc(.16 * var(--size));
  top: calc(.55 * var(--size));
  left: calc(1.6 * var(--size));
  font-size: calc(.6 * var(--size));
  line-height: 0;
}
